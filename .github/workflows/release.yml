name: Build and Release APK

on:
  push:
    branches:
      - test  # Runs on push to the test branch
    tags:
      - "v*"  # Runs when a tag like "v6.0.1" is pushed

jobs:
  build:
    name: Build and Sign APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Decode Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > keystore.jks
          file keystore.jks  # Verify it's a valid Java Keystore
          ls -lah keystore.jks  # Check file size

      - name: Debug Keystore
        run: |
          keytool -list -keystore keystore.jks -storepass "${{ secrets.KEYSTORE_PASSWORD }}" -v || echo "‚ùå Keystore password incorrect!"

      - name: Set Environment Variables
        run: |
          echo "KEYSTORE_PATH=$PWD/keystore.jks" >> $GITHUB_ENV
          echo "KEYSTORE_PASSWORD=$(echo -n '${{ secrets.KEYSTORE_PASSWORD }}')" >> $GITHUB_ENV
          echo "KEY_ALIAS=$(echo -n '${{ secrets.KEY_ALIAS }}')" >> $GITHUB_ENV
          echo "KEY_PASSWORD=$(echo -n '${{ secrets.KEY_PASSWORD }}')" >> $GITHUB_ENV

      - name: Grant Execute Permission to Gradle
        run: chmod +x gradlew

      - name: Build APK
        run: ./gradlew assembleRelease --stacktrace

      - name: Find Release APK
        run: |
          APK_PATH=$(find app/build/outputs/apk/release -name '*.apk' -print -quit)
          if [[ -z "$APK_PATH" ]]; then
            echo "‚ùå No APK found!"
            exit 1
          fi
          echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV
          echo "‚úÖ Found APK at: $APK_PATH"

      - name: Sign APK
        run: |
          echo "üîë Signing APK..."
          $ANDROID_SDK_ROOT/build-tools/34.0.0/apksigner sign \
          --ks "keystore.jks" \
          --ks-pass pass:"$KEYSTORE_PASSWORD" --key-pass pass:"$KEY_PASSWORD" \
          --out app-release-signed.apk "$APK_PATH" || { echo "‚ùå Signing failed!"; exit 1; }

      - name: Verify APK Signature
        run: |
          echo "üîç Verifying APK signature..."
          $ANDROID_SDK_ROOT/build-tools/34.0.0/apksigner verify --verbose --print-certs app-release-signed.apk

      - name: Upload Signed APK as Artifact (For Test Branch)
        if: github.ref == 'refs/heads/test'
        uses: actions/upload-artifact@v4
        with:
          name: Signed-APK
          path: app-release-signed.apk

  release:
    name: Create GitHub Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Download Signed APK
        uses: actions/download-artifact@v4
        with:
          name: Signed-APK
          path: .

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          files: app-release-signed.apk
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "üöÄ Automated release build"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}